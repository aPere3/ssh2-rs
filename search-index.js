var N=null,E="",T="t",U="u",searchIndex={};
var R=["remaining","window_size_initial","The window_size_initial as defined by the channel open…","result","identities","error","option","stream","exit_signal","knownhostfilekind","Attempt public key authentication using a PEM encoded…","methodtype","channel","disconnect","openflags","c_ulong","Returns an empty set of flags.","Returns the set containing all flags.","renameflags","Returns the raw value of the flags currently stored.","from_bits","Convert from underlying bit representation, unless that…","from_bits_truncate","Convert from underlying bit representation, dropping any…","is_empty","Returns `true` if no flags are currently stored.","Returns `true` if all flags are currently set.","intersects","Returns `true` if there are flags common to both `self`…","contains","Returns `true` all of the flags in `other` are contained…","Inserts the specified flags in-place.","Removes the specified flags in-place.","Toggles the specified flags in-place.","Inserts or removes the specified flags depending on the…","filestat","last_error","libssh2_sftp_attributes","is_file","When passed to `Channel::flush_stream`, flushes all…","try_from","borrow_mut","try_into","type_id","borrow","typeid","to_owned","clone_into","into_iter","partial_cmp","ordering","readwindow","writewindow","opentype","disconnectcode","hashtype","formatter","Returns the set difference of the two sets of flags.","sub_assign","Disables all flags enabled in the set.","Returns the complement of this set of flags.","Returns the intersection between the two sets of flags.","Returns the union of the two sets of flags.","Returns the left flags, but with all the right flags…","bitand_assign","Disables all flags disabled in the set.","bitor_assign","Adds the set of flags.","bitxor_assign","Toggles the set of flags.","from_iter","ExitSignal","ReadWindow","WriteWindow","FileStat","OpenType","DisconnectCode","HostKeyType","MethodType","HashType","KnownHostFileKind","CheckResult","KnownHostKeyFormat","PublicKey","KnownHosts","Listener","ScpFileStat","OpenFlags","RenameFlags","FileType","Identities","libssh2_sys","libssh2_agent_publickey","libssh2_knownhost","LIBSSH2_SFTP_ATTRIBUTES","LIBSSH2_SFTP_STATVFS","LIBSSH2_SESSION","LIBSSH2_AGENT","LIBSSH2_CHANNEL","LIBSSH2_LISTENER","LIBSSH2_KNOWNHOSTS","LIBSSH2_SFTP","LIBSSH2_SFTP_HANDLE","libssh2_sftp_statvfs"];
searchIndex[R[91]]={"doc":E,"i":[[3,R[92],R[91],E,N,N],[12,"magic",E,E,0,N],[12,"node",E,E,0,N],[12,"blob",E,E,0,N],[12,"blob_len",E,E,0,N],[12,"comment",E,E,0,N],[3,R[93],E,E,N,N],[12,"magic",E,E,1,N],[12,"node",E,E,1,N],[12,"name",E,E,1,N],[12,"key",E,E,1,N],[12,"typemask",E,E,1,N],[3,R[94],E,E,N,N],[12,"flags",E,E,2,N],[12,"filesize",E,E,2,N],[12,"uid",E,E,2,N],[12,"gid",E,E,2,N],[12,"permissions",E,E,2,N],[12,"atime",E,E,2,N],[12,"mtime",E,E,2,N],[3,R[95],E,E,N,N],[12,"f_bsize",E,E,3,N],[12,"f_frsize",E,E,3,N],[12,"f_blocks",E,E,3,N],[12,"f_bfree",E,E,3,N],[12,"f_bavail",E,E,3,N],[12,"f_files",E,E,3,N],[12,"f_ffree",E,E,3,N],[12,"f_favail",E,E,3,N],[12,"f_fsid",E,E,3,N],[12,"f_flag",E,E,3,N],[12,"f_namemax",E,E,3,N],[4,R[96],E,E,N,N],[4,R[97],E,E,N,N],[4,R[98],E,E,N,N],[4,R[99],E,E,N,N],[4,R[100],E,E,N,N],[4,R[101],E,E,N,N],[4,R[102],E,E,N,N],[5,"init",E,E,N,[[]]],[5,"libssh2_init",E,E,N,N],[5,"libssh2_exit",E,E,N,N],[5,"libssh2_free",E,E,N,N],[5,"libssh2_hostkey_hash",E,E,N,N],[5,"libssh2_session_init_ex",E,E,N,N],[5,"libssh2_session_free",E,E,N,N],[5,"libssh2_session_banner_get",E,E,N,N],[5,"libssh2_session_banner_set",E,E,N,N],[5,"libssh2_session_disconnect_ex",E,E,N,N],[5,"libssh2_session_flag",E,E,N,N],[5,"libssh2_session_get_blocking",E,E,N,N],[5,"libssh2_session_get_timeout",E,E,N,N],[5,"libssh2_session_hostkey",E,E,N,N],[5,"libssh2_session_method_pref",E,E,N,N],[5,"libssh2_session_methods",E,E,N,N],[5,"libssh2_session_set_blocking",E,E,N,N],[5,"libssh2_session_set_timeout",E,E,N,N],[5,"libssh2_session_supported_algs",E,E,N,N],[5,"libssh2_session_last_error",E,E,N,N],[5,"libssh2_session_handshake",E,E,N,N],[5,"libssh2_keepalive_config",E,E,N,N],[5,"libssh2_keepalive_send",E,E,N,N],[5,"libssh2_agent_init",E,E,N,N],[5,"libssh2_agent_free",E,E,N,N],[5,"libssh2_agent_connect",E,E,N,N],[5,"libssh2_agent_disconnect",E,E,N,N],[5,"libssh2_agent_list_identities",E,E,N,N],[5,"libssh2_agent_get_identity",E,E,N,N],[5,"libssh2_agent_userauth",E,E,N,N],[5,"libssh2_channel_free",E,E,N,N],[5,"libssh2_channel_close",E,E,N,N],[5,"libssh2_channel_wait_closed",E,E,N,N],[5,"libssh2_channel_wait_eof",E,E,N,N],[5,"libssh2_channel_eof",E,E,N,N],[5,"libssh2_channel_process_startup",E,E,N,N],[5,"libssh2_channel_flush_ex",E,E,N,N],[5,"libssh2_channel_write_ex",E,E,N,N],[5,"libssh2_channel_get_exit_signal",E,E,N,N],[5,"libssh2_channel_get_exit_status",E,E,N,N],[5,"libssh2_channel_open_ex",E,E,N,N],[5,"libssh2_channel_read_ex",E,E,N,N],[5,"libssh2_channel_setenv_ex",E,E,N,N],[5,"libssh2_channel_send_eof",E,E,N,N],[5,"libssh2_channel_request_pty_ex",E,E,N,N],[5,"libssh2_channel_request_pty_size_ex",E,E,N,N],[5,"libssh2_channel_window_read_ex",E,E,N,N],[5,"libssh2_channel_window_write_ex",E,E,N,N],[5,"libssh2_channel_receive_window_adjust2",E,E,N,N],[5,"libssh2_channel_direct_tcpip_ex",E,E,N,N],[5,"libssh2_channel_forward_accept",E,E,N,N],[5,"libssh2_channel_forward_cancel",E,E,N,N],[5,"libssh2_channel_forward_listen_ex",E,E,N,N],[5,"libssh2_userauth_authenticated",E,E,N,N],[5,"libssh2_userauth_list",E,E,N,N],[5,"libssh2_userauth_hostbased_fromfile_ex",E,E,N,N],[5,"libssh2_userauth_publickey_fromfile_ex",E,E,N,N],[5,"libssh2_userauth_publickey_frommemory",E,E,N,N],[5,"libssh2_userauth_password_ex",E,E,N,N],[5,"libssh2_knownhost_free",E,E,N,N],[5,"libssh2_knownhost_addc",E,E,N,N],[5,"libssh2_knownhost_check",E,E,N,N],[5,"libssh2_knownhost_checkp",E,E,N,N],[5,"libssh2_knownhost_del",E,E,N,N],[5,"libssh2_knownhost_get",E,E,N,N],[5,"libssh2_knownhost_readfile",E,E,N,N],[5,"libssh2_knownhost_readline",E,E,N,N],[5,"libssh2_knownhost_writefile",E,E,N,N],[5,"libssh2_knownhost_writeline",E,E,N,N],[5,"libssh2_knownhost_init",E,E,N,N],[5,"libssh2_scp_recv",E,E,N,N],[5,"libssh2_scp_send64",E,E,N,N],[5,"libssh2_sftp_init",E,E,N,N],[5,"libssh2_sftp_shutdown",E,E,N,N],[5,"libssh2_sftp_last_error",E,E,N,N],[5,"libssh2_sftp_open_ex",E,E,N,N],[5,"libssh2_sftp_close_handle",E,E,N,N],[5,"libssh2_sftp_mkdir_ex",E,E,N,N],[5,"libssh2_sftp_fsync",E,E,N,N],[5,"libssh2_sftp_fstat_ex",E,E,N,N],[5,"libssh2_sftp_fstatvfs",E,E,N,N],[5,"libssh2_sftp_stat_ex",E,E,N,N],[5,"libssh2_sftp_read",E,E,N,N],[5,"libssh2_sftp_symlink_ex",E,E,N,N],[5,"libssh2_sftp_rename_ex",E,E,N,N],[5,"libssh2_sftp_rmdir_ex",E,E,N,N],[5,"libssh2_sftp_write",E,E,N,N],[5,"libssh2_sftp_tell64",E,E,N,N],[5,"libssh2_sftp_seek64",E,E,N,N],[5,"libssh2_sftp_readdir_ex",E,E,N,N],[5,"libssh2_sftp_unlink_ex",E,E,N,N],[6,"libssh2_int64_t",E,E,N,N],[6,"libssh2_uint64_t",E,E,N,N],[6,"LIBSSH2_ALLOC_FUNC",E,E,N,N],[6,"LIBSSH2_FREE_FUNC",E,E,N,N],[6,"LIBSSH2_REALLOC_FUNC",E,E,N,N],[6,"LIBSSH2_PASSWD_CHANGEREQ_FUNC",E,E,N,N],[6,"libssh2_socket_t",E,E,N,N],[17,"SSH_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT",E,E,N,N],[17,"SSH_DISCONNECT_PROTOCOL_ERROR",E,E,N,N],[17,"SSH_DISCONNECT_KEY_EXCHANGE_FAILED",E,E,N,N],[17,"SSH_DISCONNECT_RESERVED",E,E,N,N],[17,"SSH_DISCONNECT_MAC_ERROR",E,E,N,N],[17,"SSH_DISCONNECT_COMPRESSION_ERROR",E,E,N,N],[17,"SSH_DISCONNECT_SERVICE_NOT_AVAILABLE",E,E,N,N],[17,"SSH_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED",E,E,N,N],[17,"SSH_DISCONNECT_HOST_KEY_NOT_VERIFIABLE",E,E,N,N],[17,"SSH_DISCONNECT_CONNECTION_LOST",E,E,N,N],[17,"SSH_DISCONNECT_BY_APPLICATION",E,E,N,N],[17,"SSH_DISCONNECT_TOO_MANY_CONNECTIONS",E,E,N,N],[17,"SSH_DISCONNECT_AUTH_CANCELLED_BY_USER",E,E,N,N],[17,"SSH_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE",E,E,N,N],[17,"SSH_DISCONNECT_ILLEGAL_USER_NAME",E,E,N,N],[17,"LIBSSH2_FLAG_SIGPIPE",E,E,N,N],[17,"LIBSSH2_FLAG_COMPRESS",E,E,N,N],[17,"LIBSSH2_HOSTKEY_TYPE_UNKNOWN",E,E,N,N],[17,"LIBSSH2_HOSTKEY_TYPE_RSA",E,E,N,N],[17,"LIBSSH2_HOSTKEY_TYPE_DSS",E,E,N,N],[17,"LIBSSH2_METHOD_KEX",E,E,N,N],[17,"LIBSSH2_METHOD_HOSTKEY",E,E,N,N],[17,"LIBSSH2_METHOD_CRYPT_CS",E,E,N,N],[17,"LIBSSH2_METHOD_CRYPT_SC",E,E,N,N],[17,"LIBSSH2_METHOD_MAC_CS",E,E,N,N],[17,"LIBSSH2_METHOD_MAC_SC",E,E,N,N],[17,"LIBSSH2_METHOD_COMP_CS",E,E,N,N],[17,"LIBSSH2_METHOD_COMP_SC",E,E,N,N],[17,"LIBSSH2_METHOD_LANG_CS",E,E,N,N],[17,"LIBSSH2_METHOD_LANG_SC",E,E,N,N],[17,"LIBSSH2_CHANNEL_PACKET_DEFAULT",E,E,N,N],[17,"LIBSSH2_CHANNEL_WINDOW_DEFAULT",E,E,N,N],[17,"LIBSSH2_ERROR_BANNER_RECV",E,E,N,N],[17,"LIBSSH2_ERROR_BANNER_SEND",E,E,N,N],[17,"LIBSSH2_ERROR_INVALID_MAC",E,E,N,N],[17,"LIBSSH2_ERROR_KEX_FAILURE",E,E,N,N],[17,"LIBSSH2_ERROR_ALLOC",E,E,N,N],[17,"LIBSSH2_ERROR_SOCKET_SEND",E,E,N,N],[17,"LIBSSH2_ERROR_KEY_EXCHANGE_FAILURE",E,E,N,N],[17,"LIBSSH2_ERROR_TIMEOUT",E,E,N,N],[17,"LIBSSH2_ERROR_HOSTKEY_INIT",E,E,N,N],[17,"LIBSSH2_ERROR_HOSTKEY_SIGN",E,E,N,N],[17,"LIBSSH2_ERROR_DECRYPT",E,E,N,N],[17,"LIBSSH2_ERROR_SOCKET_DISCONNECT",E,E,N,N],[17,"LIBSSH2_ERROR_PROTO",E,E,N,N],[17,"LIBSSH2_ERROR_PASSWORD_EXPIRED",E,E,N,N],[17,"LIBSSH2_ERROR_FILE",E,E,N,N],[17,"LIBSSH2_ERROR_METHOD_NONE",E,E,N,N],[17,"LIBSSH2_ERROR_AUTHENTICATION_FAILED",E,E,N,N],[17,"LIBSSH2_ERROR_PUBLICKEY_UNRECOGNIZED",E,E,N,N],[17,"LIBSSH2_ERROR_PUBLICKEY_UNVERIFIED",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_OUTOFORDER",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_FAILURE",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_REQUEST_DENIED",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_UNKNOWN",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_WINDOW_EXCEEDED",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_PACKET_EXCEEDED",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_CLOSED",E,E,N,N],[17,"LIBSSH2_ERROR_CHANNEL_EOF_SENT",E,E,N,N],[17,"LIBSSH2_ERROR_SCP_PROTOCOL",E,E,N,N],[17,"LIBSSH2_ERROR_ZLIB",E,E,N,N],[17,"LIBSSH2_ERROR_SOCKET_TIMEOUT",E,E,N,N],[17,"LIBSSH2_ERROR_SFTP_PROTOCOL",E,E,N,N],[17,"LIBSSH2_ERROR_REQUEST_DENIED",E,E,N,N],[17,"LIBSSH2_ERROR_METHOD_NOT_SUPPORTED",E,E,N,N],[17,"LIBSSH2_ERROR_INVAL",E,E,N,N],[17,"LIBSSH2_ERROR_INVALID_POLL_TYPE",E,E,N,N],[17,"LIBSSH2_ERROR_PUBLICKEY_PROTOCOL",E,E,N,N],[17,"LIBSSH2_ERROR_EAGAIN",E,E,N,N],[17,"LIBSSH2_ERROR_BUFFER_TOO_SMALL",E,E,N,N],[17,"LIBSSH2_ERROR_BAD_USE",E,E,N,N],[17,"LIBSSH2_ERROR_COMPRESS",E,E,N,N],[17,"LIBSSH2_ERROR_OUT_OF_BOUNDARY",E,E,N,N],[17,"LIBSSH2_ERROR_AGENT_PROTOCOL",E,E,N,N],[17,"LIBSSH2_ERROR_SOCKET_RECV",E,E,N,N],[17,"LIBSSH2_ERROR_ENCRYPT",E,E,N,N],[17,"LIBSSH2_ERROR_BAD_SOCKET",E,E,N,N],[17,"LIBSSH2_ERROR_KNOWN_HOSTS",E,E,N,N],[17,"LIBSSH2_FX_EOF",E,E,N,N],[17,"LIBSSH2_FX_NO_SUCH_FILE",E,E,N,N],[17,"LIBSSH2_FX_PERMISSION_DENIED",E,E,N,N],[17,"LIBSSH2_FX_FAILURE",E,E,N,N],[17,"LIBSSH2_FX_BAD_MESSAGE",E,E,N,N],[17,"LIBSSH2_FX_NO_CONNECTION",E,E,N,N],[17,"LIBSSH2_FX_CONNECTION_LOST",E,E,N,N],[17,"LIBSSH2_FX_OP_UNSUPPORTED",E,E,N,N],[17,"LIBSSH2_FX_INVALID_HANDLE",E,E,N,N],[17,"LIBSSH2_FX_NO_SUCH_PATH",E,E,N,N],[17,"LIBSSH2_FX_FILE_ALREADY_EXISTS",E,E,N,N],[17,"LIBSSH2_FX_WRITE_PROTECT",E,E,N,N],[17,"LIBSSH2_FX_NO_MEDIA",E,E,N,N],[17,"LIBSSH2_FX_NO_SPACE_ON_FILESYSTEM",E,E,N,N],[17,"LIBSSH2_FX_QUOTA_EXCEEDED",E,E,N,N],[17,"LIBSSH2_FX_UNKNOWN_PRINCIPAL",E,E,N,N],[17,"LIBSSH2_FX_LOCK_CONFLICT",E,E,N,N],[17,"LIBSSH2_FX_DIR_NOT_EMPTY",E,E,N,N],[17,"LIBSSH2_FX_NOT_A_DIRECTORY",E,E,N,N],[17,"LIBSSH2_FX_INVALID_FILENAME",E,E,N,N],[17,"LIBSSH2_FX_LINK_LOOP",E,E,N,N],[17,"LIBSSH2_HOSTKEY_HASH_MD5",E,E,N,N],[17,"LIBSSH2_HOSTKEY_HASH_SHA1",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_FILE_OPENSSH",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_CHECK_MATCH",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_CHECK_MISMATCH",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_CHECK_NOTFOUND",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_CHECK_FAILURE",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_TYPE_PLAIN",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_TYPE_SHA1",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_TYPE_CUSTOM",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEYENC_RAW",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEYENC_BASE64",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_RSA1",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_SSHRSA",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_SSHDSS",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_256",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_384",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_ECDSA_521",E,E,N,N],[17,"LIBSSH2_KNOWNHOST_KEY_UNKNOWN",E,E,N,N],[17,"LIBSSH2_FXF_READ",E,E,N,N],[17,"LIBSSH2_FXF_WRITE",E,E,N,N],[17,"LIBSSH2_FXF_APPEND",E,E,N,N],[17,"LIBSSH2_FXF_CREAT",E,E,N,N],[17,"LIBSSH2_FXF_TRUNC",E,E,N,N],[17,"LIBSSH2_FXF_EXCL",E,E,N,N],[17,"LIBSSH2_SFTP_OPENFILE",E,E,N,N],[17,"LIBSSH2_SFTP_OPENDIR",E,E,N,N],[17,"LIBSSH2_SFTP_ATTR_SIZE",E,E,N,N],[17,"LIBSSH2_SFTP_ATTR_UIDGID",E,E,N,N],[17,"LIBSSH2_SFTP_ATTR_PERMISSIONS",E,E,N,N],[17,"LIBSSH2_SFTP_ATTR_ACMODTIME",E,E,N,N],[17,"LIBSSH2_SFTP_ATTR_EXTENDED",E,E,N,N],[17,"LIBSSH2_SFTP_STAT",E,E,N,N],[17,"LIBSSH2_SFTP_LSTAT",E,E,N,N],[17,"LIBSSH2_SFTP_SETSTAT",E,E,N,N],[17,"LIBSSH2_SFTP_SYMLINK",E,E,N,N],[17,"LIBSSH2_SFTP_READLINK",E,E,N,N],[17,"LIBSSH2_SFTP_REALPATH",E,E,N,N],[17,"LIBSSH2_SFTP_RENAME_OVERWRITE",E,E,N,N],[17,"LIBSSH2_SFTP_RENAME_ATOMIC",E,E,N,N],[17,"LIBSSH2_SFTP_RENAME_NATIVE",E,E,N,N],[17,"LIBSSH2_INIT_NO_CRYPTO",E,E,N,N],[17,"LIBSSH2_SFTP_S_IFMT",E,E,N,N],[17,"LIBSSH2_SFTP_S_IFDIR",E,E,N,N],[17,"LIBSSH2_SFTP_S_IFREG",E,E,N,N],[17,"LIBSSH2_SFTP_S_IFLNK",E,E,N,N],[11,"into",E,E,0,[[["self"]],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[40],E,E,0,[[[U]],[R[3]]]],[11,R[44],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[R[45]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"]],[R[3]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[40],E,E,1,[[[U]],[R[3]]]],[11,R[44],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[R[45]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"]],[R[3]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[40],E,E,2,[[[U]],[R[3]]]],[11,R[44],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[R[45]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"]],[R[3]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[40],E,E,3,[[[U]],[R[3]]]],[11,R[44],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[R[45]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"]],[R[3]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[40],E,E,4,[[[U]],[R[3]]]],[11,R[44],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[R[45]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"]],[R[3]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[40],E,E,5,[[[U]],[R[3]]]],[11,R[44],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[R[45]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"]],[R[3]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[40],E,E,6,[[[U]],[R[3]]]],[11,R[44],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[R[45]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"]],[R[3]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[40],E,E,7,[[[U]],[R[3]]]],[11,R[44],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[R[45]]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"]],[R[3]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[40],E,E,8,[[[U]],[R[3]]]],[11,R[44],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[R[45]]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"]],[R[3]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[40],E,E,9,[[[U]],[R[3]]]],[11,R[44],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[R[45]]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"]],[R[3]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[40],E,E,10,[[[U]],[R[3]]]],[11,R[44],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[R[45]]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"]],[R[3]]]],[11,"clone",E,E,2,[[["self"]],[R[37]]]],[11,"clone",E,E,3,[[["self"]],[R[103]]]]],"p":[[3,R[92]],[3,R[93]],[3,R[94]],[3,R[95]],[4,R[96]],[4,R[97]],[4,R[98]],[4,R[99]],[4,R[100]],[4,R[101]],[4,R[102]]]};
searchIndex["ssh2"]={"doc":"Rust bindings to libssh2, an SSH client library.","i":[[3,"Agent","ssh2","A structure representing a connection to an SSH agent.",N,N],[3,R[90],E,"An iterator over the identities found in an SSH agent.",N,N],[3,R[83],E,"A public key which is extracted from an SSH agent.",N,N],[3,"Channel",E,"A channel represents a portion of an SSH connection on…",N,N],[3,R[71],E,"Data received from when a program exits with a signal.",N,N],[12,R[8],E,"The exit signal received, if the program did not exit…",0,N],[12,"error_message",E,"Error message provided by the remote server (if any)",0,N],[12,"lang_tag",E,"Language tag provided by the remote server (if any)",0,N],[3,R[72],E,"Description of the read window as returned by…",N,N],[12,R[0],E,"The number of bytes which the remote end may send without…",1,N],[12,"available",E,"The number of bytes actually available to be read.",1,N],[12,R[1],E,R[2],1,N],[3,R[73],E,"Description of the write window as returned by…",N,N],[12,R[0],E,"The number of bytes which may be safely written on the…",2,N],[12,R[1],E,R[2],2,N],[3,"Stream",E,"A channel can have a number of streams, each identified by…",N,N],[3,"Error",E,"Representation of an error that can occur within libssh2",N,N],[3,R[84],E,"A set of known hosts which can be used to verify the…",N,N],[3,"Hosts",E,"Iterator over the hosts in a `KnownHosts` structure.",N,N],[3,"Host",E,"Structure representing a known host as part of a…",N,N],[3,R[85],E,"A listener represents a forwarding port from the remote…",N,N],[3,"Session",E,"An SSH session, typically representing one TCP connection.",N,N],[3,R[86],E,"Metadata returned about a remote file when received via…",N,N],[3,"Sftp",E,"A handle to a remote filesystem over SFTP.",N,N],[3,R[87],E,"Options that can be used to configure how a file is opened",N,N],[3,R[88],E,"Options to `Sftp::rename`.",N,N],[3,"File",E,"A file handle to an SFTP connection.",N,N],[3,R[74],E,"Metadata information about a remote file.",N,N],[12,"size",E,"File size, in bytes of the file.",3,N],[12,"uid",E,"Owner ID of the file",3,N],[12,"gid",E,"Owning group of the file",3,N],[12,"perm",E,"Permissions (mode) of the file",3,N],[12,"atime",E,"Last access time of the file",3,N],[12,"mtime",E,"Last modification time of the file",3,N],[3,R[89],E,"An structure representing a type of file.",N,N],[4,R[75],E,"How to open a file handle with libssh2.",N,N],[13,"File",E,"Specify that a file shoud be opened.",4,N],[13,"Dir",E,"Specify that a directory should be opened.",4,N],[4,R[76],E,E,N,N],[13,"HostNotAllowedToConnect",E,E,5,N],[13,"ProtocolError",E,E,5,N],[13,"KeyExchangeFailed",E,E,5,N],[13,"Reserved",E,E,5,N],[13,"MacError",E,E,5,N],[13,"CompressionError",E,E,5,N],[13,"ServiceNotAvailable",E,E,5,N],[13,"ProtocolVersionNotSupported",E,E,5,N],[13,"HostKeyNotVerifiable",E,E,5,N],[13,"ConnectionLost",E,E,5,N],[13,"ByApplication",E,E,5,N],[13,"TooManyConnections",E,E,5,N],[13,"AuthCancelledByUser",E,E,5,N],[13,"NoMoreAuthMethodsAvailable",E,E,5,N],[13,"IllegalUserName",E,E,5,N],[4,R[77],E,E,N,N],[13,"Unknown",E,E,6,N],[13,"Rsa",E,E,6,N],[13,"Dss",E,E,6,N],[4,R[78],E,E,N,N],[13,"Kex",E,E,7,N],[13,"HostKey",E,E,7,N],[13,"CryptCs",E,E,7,N],[13,"CryptSc",E,E,7,N],[13,"MacCs",E,E,7,N],[13,"MacSc",E,E,7,N],[13,"CompCs",E,E,7,N],[13,"CompSc",E,E,7,N],[13,"LangCs",E,E,7,N],[13,"LangSc",E,E,7,N],[4,R[79],E,E,N,N],[13,"Md5",E,E,8,N],[13,"Sha1",E,E,8,N],[4,R[80],E,E,N,N],[13,"OpenSSH",E,E,9,N],[4,R[81],E,"Possible results of a call to `KnownHosts::check`",N,N],[13,"Match",E,"Hosts and keys match",10,N],[13,"Mismatch",E,"Host was found, but the keys didn't match!",10,N],[13,"NotFound",E,"No host match was found",10,N],[13,"Failure",E,"Something prevented the check to be made",10,N],[4,R[82],E,E,N,N],[13,"Rsa1",E,E,11,N],[13,"SshRsa",E,E,11,N],[13,"SshDss",E,E,11,N],[5,"init",E,"Initialize the libssh2 library.",N,[[]]],[11,"connect",E,"Connect to an ssh-agent running on the system.",12,[[["self"]],[R[3],[R[5]]]]],[11,R[13],E,"Close a connection to an ssh-agent.",12,[[["self"]],[R[3],[R[5]]]]],[11,"list_identities",E,"Request an ssh-agent to list of public keys, and stores…",12,[[["self"]],[R[3],[R[5]]]]],[11,R[4],E,"Get an iterator over the identities of this agent.",12,[[["self"]],[R[4]]]],[11,"userauth",E,"Attempt public key authentication with the help of…",12,[[["self"],["str"],["publickey"]],[R[3],[R[5]]]]],[11,"blob",E,"Return the data of this public key.",13,N],[11,"comment",E,"Returns the comment in a printable format",13,[[["self"]],["str"]]],[11,"setenv",E,"Set an environment variable in the remote channel's…",14,[[["self"],["str"],["str"]],[R[3],[R[5]]]]],[11,"request_pty",E,"Request a PTY on an established channel.",14,[[["self"],["str"],[R[6],["str"]],[R[6]]],[R[3],[R[5]]]]],[11,"request_pty_size",E,"Request a PTY of a specified size",14,[[["self"],["u32"],["u32"],[R[6],["u32"]],[R[6],["u32"]]],[R[3],[R[5]]]]],[11,"exec",E,"Execute a command",14,[[["self"],["str"]],[R[3],[R[5]]]]],[11,"shell",E,"Start a shell",14,[[["self"]],[R[3],[R[5]]]]],[11,"subsystem",E,"Request a subsystem be started.",14,[[["self"],["str"]],[R[3],[R[5]]]]],[11,"process_startup",E,"Initiate a request on a session type channel.",14,[[["self"],["str"],[R[6],["str"]]],[R[3],[R[5]]]]],[11,"stderr",E,"Get a handle to the stderr stream of this channel.",14,[[["self"]],[R[7]]]],[11,R[7],E,"Get a handle to a particular stream for this channel.",14,[[["self"],["i32"]],[R[7]]]],[11,"exit_status",E,"Returns the exit code raised by the process running on the…",14,[[["self"]],[R[3],["i32",R[5]]]]],[11,R[8],E,"Get the remote exit signal.",14,[[["self"]],[R[3],["exitsignal",R[5]]]]],[11,"read_window",E,"Check the status of the read window.",14,[[["self"]],[R[51]]]],[11,"write_window",E,"Check the status of the write window.",14,[[["self"]],[R[52]]]],[11,"adjust_receive_window",E,"Adjust the receive window for a channel by adjustment bytes.",14,[[["self"],["u64"],["bool"]],[R[3],["u64",R[5]]]]],[11,"eof",E,"Check if the remote host has sent an EOF status for the…",14,[[["self"]],["bool"]]],[11,"send_eof",E,"Tell the remote host that no further data will be sent on…",14,[[["self"]],[R[3],[R[5]]]]],[11,"wait_eof",E,"Wait for the remote end to send EOF.",14,[[["self"]],[R[3],[R[5]]]]],[11,"close",E,"Close an active data channel.",14,[[["self"]],[R[3],[R[5]]]]],[11,"wait_close",E,"Enter a temporary blocking state until the remote host…",14,[[["self"]],[R[3],[R[5]]]]],[11,R[36],E,"Generate the last error that occurred for a `Session`.",15,[[["session"]],[R[6],[R[5]]]]],[11,"new",E,"Create a new error for the given code and message",15,[[["c_int"],["str"]],[R[5]]]],[11,"eof",E,"Generate an error that represents EOF",15,[[],[R[5]]]],[11,"unknown",E,"Generate an error for unknown failure",15,[[],[R[5]]]],[11,"from_errno",E,"Construct an error from an error code from libssh2",15,[[["c_int"]],[R[5]]]],[11,"message",E,"Get the message corresponding to this error",15,[[["self"]],["str"]]],[11,"code",E,"Return the code for this error",15,[[["self"]],["c_int"]]],[11,"read_file",E,"Reads a collection of known hosts from a specified file…",16,[[["self"],["path"],[R[9]]],[R[3],["u32",R[5]]]]],[11,"read_str",E,"Read a line as if it were from a known hosts file.",16,[[["self"],["str"],[R[9]]],[R[3],[R[5]]]]],[11,"write_file",E,"Writes all the known hosts to the specified file using the…",16,[[["self"],["path"],[R[9]]],[R[3],[R[5]]]]],[11,"write_string",E,"Converts a single known host to a single line of output…",16,[[["self"],["host"],[R[9]]],[R[3],["string",R[5]]]]],[11,"iter",E,"Create an iterator over all of the known hosts in this…",16,[[["self"]],["hosts"]]],[11,"remove",E,"Delete a known host entry from the collection of known…",16,[[["self"],["host"]],[R[3],[R[5]]]]],[11,"check",E,"Checks a host and its associated key against the…",16,N],[11,"check_port",E,"Same as `check`, but takes a port as well.",16,N],[11,"add",E,"Adds a known host to the collection of known hosts.",16,N],[11,"name",E,"This is `None` if no plain text host name exists.",17,[[["self"]],[R[6],["str"]]]],[11,"key",E,"Returns the key in base64/printable format",17,[[["self"]],["str"]]],[11,"accept",E,"Accept a queued connection from this listener.",18,[[["self"]],[R[3],[R[12],R[5]]]]],[11,"new",E,"Initializes an SSH session object.",19,[[],[R[6],["session"]]]],[11,"set_banner",E,"Set the SSH protocol banner for the local client",19,[[["self"],["str"]],[R[3],[R[5]]]]],[11,"set_allow_sigpipe",E,"Flag indicating whether SIGPIPE signals will be allowed or…",19,[[["self"],["bool"]]]],[11,"set_compress",E,"Flag indicating whether this library will attempt to…",19,[[["self"],["bool"]]]],[11,"set_blocking",E,"Set or clear blocking mode on session",19,[[["self"],["bool"]]]],[11,"is_blocking",E,"Returns whether the session was previously set to…",19,[[["self"]],["bool"]]],[11,"set_timeout",E,"Set timeout for blocking functions.",19,[[["self"],["u32"]]]],[11,"timeout",E,"Returns the timeout, in milliseconds, for how long…",19,[[["self"]],["u32"]]],[11,"handshake",E,"Begin transport layer protocol negotiation with the…",19,[[["self"],["tcpstream"]],[R[3],[R[5]]]]],[11,"userauth_password",E,"Attempt basic password authentication.",19,[[["self"],["str"],["str"]],[R[3],[R[5]]]]],[11,"userauth_agent",E,"Attempt to perform SSH agent authentication.",19,[[["self"],["str"]],[R[3],[R[5]]]]],[11,"userauth_pubkey_file",E,R[10],19,[[["self"],["str"],[R[6],["path"]],["path"],[R[6],["str"]]],[R[3],[R[5]]]]],[11,"userauth_pubkey_memory",E,R[10],19,[[["self"],["str"],[R[6],["str"]],["str"],[R[6],["str"]]],[R[3],[R[5]]]]],[11,"userauth_hostbased_file",E,E,19,[[["self"],["str"],["path"],["path"],[R[6],["str"]],["str"],[R[6],["str"]]],[R[3],[R[5]]]]],[11,"authenticated",E,"Indicates whether or not the named session has been…",19,[[["self"]],["bool"]]],[11,"auth_methods",E,"Send a SSH_USERAUTH_NONE request to the remote host.",19,[[["self"],["str"]],[R[3],["str",R[5]]]]],[11,"method_pref",E,"Set preferred key exchange method",19,[[["self"],[R[11]],["str"]],[R[3],[R[5]]]]],[11,"methods",E,"Return the currently active algorithms.",19,[[["self"],[R[11]]],[R[6],["str"]]]],[11,"supported_algs",E,"Get list of supported algorithms.",19,[[["self"],[R[11]]],[R[3],["vec",R[5]]]]],[11,"agent",E,"Init an ssh-agent handle.",19,[[["self"]],[R[3],["agent",R[5]]]]],[11,"known_hosts",E,"Init a collection of known hosts for this session.",19,[[["self"]],[R[3],["knownhosts",R[5]]]]],[11,"channel_session",E,"Establish a new session-based channel.",19,[[["self"]],[R[3],[R[12],R[5]]]]],[11,"channel_direct_tcpip",E,"Tunnel a TCP connection through an SSH session.",19,[[["self"],["str"],["u16"],[R[6]]],[R[3],[R[12],R[5]]]]],[11,"channel_forward_listen",E,"Instruct the remote SSH server to begin listening for…",19,[[["self"],["u16"],[R[6],["str"]],[R[6],["u32"]]],[R[3],[R[5]]]]],[11,"scp_recv",E,"Request a file from the remote host via SCP.",19,[[["self"],["path"]],[R[3],[R[5]]]]],[11,"scp_send",E,"Send a file to the remote host via SCP.",19,[[["self"],["path"],["i32"],["u64"],[R[6]]],[R[3],[R[12],R[5]]]]],[11,"sftp",E,"Open a channel and initialize the SFTP subsystem.",19,[[["self"]],[R[3],["sftp",R[5]]]]],[11,"channel_open",E,"Allocate a new channel for exchanging data with the server.",19,[[["self"],["str"],["u32"],["u32"],[R[6],["str"]]],[R[3],[R[12],R[5]]]]],[11,"banner",E,"Get the remote banner",19,[[["self"]],[R[6],["str"]]]],[11,"banner_bytes",E,"See `banner`.",19,[[["self"]],[R[6]]]],[11,"host_key",E,"Get the remote key.",19,[[["self"]],[R[6]]]],[11,"host_key_hash",E,"Returns the computed digest of the remote system's hostkey.",19,[[["self"],[R[55]]],[R[6]]]],[11,"set_keepalive",E,"Set how often keepalive messages should be sent.",19,[[["self"],["bool"],["u32"]]]],[11,"keepalive_send",E,"Send a keepalive message if needed.",19,[[["self"]],[R[3],["u32",R[5]]]]],[11,R[13],E,"Terminate the transport layer.",19,[[["self"],[R[6],[R[54]]],["str"],[R[6],["str"]]],[R[3],[R[5]]]]],[11,"rc",E,"Translate a return code into a Rust-`Result`.",19,[[["self"],["c_int"]],[R[3],[R[5]]]]],[11,"size",E,"Returns the size of the remote file.",20,[[["self"]],["u64"]]],[11,"mode",E,"Returns the listed mode of the remote file.",20,[[["self"]],["i32"]]],[11,"is_dir",E,"Returns whether the remote file is a directory.",20,[[["self"]],["bool"]]],[11,R[38],E,"Returns whether the remote file is a regular file.",20,[[["self"]],["bool"]]],[18,"READ",E,"Open the file for reading.",21,N],[18,"WRITE",E,"Open the file for writing. If both this and `Read` are…",21,N],[18,"APPEND",E,"Force all writes to append data at the end of the file.",21,N],[18,"CREATE",E,"If this flag is specified, then a new file will be created…",21,N],[18,"TRUNCATE",E,"Forces an existing file with the same name to be truncated…",21,N],[18,"EXCLUSIVE",E,"Causes the request to fail if the named file already…",21,N],[11,"empty",E,R[16],21,[[],[R[14]]]],[11,"all",E,R[17],21,[[],[R[14]]]],[11,"bits",E,R[19],21,[[["self"]],[R[15]]]],[11,R[20],E,R[21],21,[[[R[15]]],[R[6],[R[14]]]]],[11,R[22],E,R[23],21,[[[R[15]]],[R[14]]]],[11,R[24],E,R[25],21,[[["self"]],["bool"]]],[11,"is_all",E,R[26],21,[[["self"]],["bool"]]],[11,R[27],E,R[28],21,[[["self"],[R[14]]],["bool"]]],[11,R[29],E,R[30],21,[[["self"],[R[14]]],["bool"]]],[11,"insert",E,R[31],21,[[["self"],[R[14]]]]],[11,"remove",E,R[32],21,[[["self"],[R[14]]]]],[11,"toggle",E,R[33],21,[[["self"],[R[14]]]]],[11,"set",E,R[34],21,[[["self"],[R[14]],["bool"]]]],[18,"OVERWRITE",E,"In a rename operation, overwrite the destination if it…",22,N],[18,"ATOMIC",E,"Inform the remote that an atomic rename operation is…",22,N],[18,"NATIVE",E,"Inform the remote end that the native system calls for…",22,N],[11,"empty",E,R[16],22,[[],[R[18]]]],[11,"all",E,R[17],22,[[],[R[18]]]],[11,"bits",E,R[19],22,[[["self"]],["c_long"]]],[11,R[20],E,R[21],22,[[["c_long"]],[R[6],[R[18]]]]],[11,R[22],E,R[23],22,[[["c_long"]],[R[18]]]],[11,R[24],E,R[25],22,[[["self"]],["bool"]]],[11,"is_all",E,R[26],22,[[["self"]],["bool"]]],[11,R[27],E,R[28],22,[[["self"],[R[18]]],["bool"]]],[11,R[29],E,R[30],22,[[["self"],[R[18]]],["bool"]]],[11,"insert",E,R[31],22,[[["self"],[R[18]]]]],[11,"remove",E,R[32],22,[[["self"],[R[18]]]]],[11,"toggle",E,R[33],22,[[["self"],[R[18]]]]],[11,"set",E,R[34],22,[[["self"],[R[18]],["bool"]]]],[11,"open_mode",E,"Open a handle to a file.",23,[[["self"],["path"],[R[14]],["i32"],[R[53]]],[R[3],["file",R[5]]]]],[11,"open",E,"Helper to open a file in the `Read` mode.",23,[[["self"],["path"]],[R[3],["file",R[5]]]]],[11,"create",E,"Helper to create a file in write-only mode with truncation.",23,[[["self"],["path"]],[R[3],["file",R[5]]]]],[11,"opendir",E,"Helper to open a directory for reading its contents.",23,[[["self"],["path"]],[R[3],["file",R[5]]]]],[11,"readdir",E,"Convenience function to read the files in a directory.",23,[[["self"],["path"]],[R[3],["vec",R[5]]]]],[11,"mkdir",E,"Create a directory on the remote file system.",23,[[["self"],["path"],["i32"]],[R[3],[R[5]]]]],[11,"rmdir",E,"Remove a directory from the remote file system.",23,[[["self"],["path"]],[R[3],[R[5]]]]],[11,"stat",E,"Get the metadata for a file, performed by stat(2)",23,[[["self"],["path"]],[R[3],[R[35],R[5]]]]],[11,"lstat",E,"Get the metadata for a file, performed by lstat(2)",23,[[["self"],["path"]],[R[3],[R[35],R[5]]]]],[11,"setstat",E,"Set the metadata for a file.",23,[[["self"],["path"],[R[35]]],[R[3],[R[5]]]]],[11,"symlink",E,"Create a symlink at `target` pointing at `path`.",23,[[["self"],["path"],["path"]],[R[3],[R[5]]]]],[11,"readlink",E,"Read a symlink at `path`.",23,[[["self"],["path"]],[R[3],["pathbuf",R[5]]]]],[11,"realpath",E,"Resolve the real path for `path`.",23,[[["self"],["path"]],[R[3],["pathbuf",R[5]]]]],[11,"rename",E,"Rename a filesystem object on the remote filesystem.",23,[[["self"],["path"],["path"],[R[6],[R[18]]]],[R[3],[R[5]]]]],[11,"unlink",E,"Remove a file on the remote filesystem",23,[[["self"],["path"]],[R[3],[R[5]]]]],[11,R[36],E,"Peel off the last error to happen on this SFTP instance.",23,[[["self"]],[R[5]]]],[11,"rc",E,"Translates a return code into a Rust-`Result`",23,[[["self"],["c_int"]],[R[3],[R[5]]]]],[11,"setstat",E,"Set the metadata for this handle.",24,[[["self"],[R[35]]],[R[3],[R[5]]]]],[11,"stat",E,"Get the metadata for this handle.",24,[[["self"]],[R[3],[R[35],R[5]]]]],[11,"statvfs",E,E,24,[[["self"]],[R[3],[R[103],R[5]]]]],[11,"readdir",E,"Reads a block of data from a handle and returns file entry…",24,[[["self"]],[R[3],[R[5]]]]],[11,"fsync",E,"This function causes the remote server to synchronize the…",24,[[["self"]],[R[3],[R[5]]]]],[11,"file_type",E,"Returns the file type for this filestat.",3,[[["self"]],["filetype"]]],[11,"is_dir",E,"Returns whether this metadata is for a directory.",3,[[["self"]],["bool"]]],[11,R[38],E,"Returns whether this metadata is for a regular file.",3,[[["self"]],["bool"]]],[11,"from_raw",E,"Creates a new instance of a stat from a raw instance.",3,[[[R[37]]],[R[35]]]],[11,"raw",E,"Convert this stat structure to its raw representation.",3,[[["self"]],[R[37]]]],[11,"is_dir",E,"Test whether this file type represents a directory.",25,[[["self"]],["bool"]]],[11,R[38],E,"Test whether this file type represents a regular file.",25,[[["self"]],["bool"]]],[11,"is_symlink",E,"Test whether this file type represents a symbolic link.",25,[[["self"]],["bool"]]],[7,"FLUSH_EXTENDED_DATA",E,R[39],N,N],[7,"FLUSH_ALL",E,R[39],N,N],[7,"EXTENDED_DATA_STDERR",E,"Stream ID of the stderr channel for stream-related methods…",N,N],[11,"into",E,E,12,[[["self"]],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[40],E,E,12,[[[U]],[R[3]]]],[11,R[44],E,E,12,[[["self"]],[T]]],[11,R[43],E,E,12,[[["self"]],[R[45]]]],[11,R[41],E,E,12,[[["self"]],[T]]],[11,R[42],E,E,12,[[["self"]],[R[3]]]],[11,"into",E,E,26,[[["self"]],[U]]],[11,R[48],E,E,26,[[["self"]],["i"]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[40],E,E,26,[[[U]],[R[3]]]],[11,R[44],E,E,26,[[["self"]],[T]]],[11,R[43],E,E,26,[[["self"]],[R[45]]]],[11,R[41],E,E,26,[[["self"]],[T]]],[11,R[42],E,E,26,[[["self"]],[R[3]]]],[11,"into",E,E,13,[[["self"]],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[40],E,E,13,[[[U]],[R[3]]]],[11,R[44],E,E,13,[[["self"]],[T]]],[11,R[43],E,E,13,[[["self"]],[R[45]]]],[11,R[41],E,E,13,[[["self"]],[T]]],[11,R[42],E,E,13,[[["self"]],[R[3]]]],[11,"into",E,E,14,[[["self"]],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[40],E,E,14,[[[U]],[R[3]]]],[11,R[44],E,E,14,[[["self"]],[T]]],[11,R[43],E,E,14,[[["self"]],[R[45]]]],[11,R[41],E,E,14,[[["self"]],[T]]],[11,R[42],E,E,14,[[["self"]],[R[3]]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[40],E,E,0,[[[U]],[R[3]]]],[11,R[44],E,E,0,[[["self"]],[T]]],[11,R[43],E,E,0,[[["self"]],[R[45]]]],[11,R[41],E,E,0,[[["self"]],[T]]],[11,R[42],E,E,0,[[["self"]],[R[3]]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[46],E,E,1,[[["self"]],[T]]],[11,R[47],E,E,1,N],[11,"from",E,E,1,[[[T]],[T]]],[11,R[40],E,E,1,[[[U]],[R[3]]]],[11,R[44],E,E,1,[[["self"]],[T]]],[11,R[43],E,E,1,[[["self"]],[R[45]]]],[11,R[41],E,E,1,[[["self"]],[T]]],[11,R[42],E,E,1,[[["self"]],[R[3]]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[46],E,E,2,[[["self"]],[T]]],[11,R[47],E,E,2,N],[11,"from",E,E,2,[[[T]],[T]]],[11,R[40],E,E,2,[[[U]],[R[3]]]],[11,R[44],E,E,2,[[["self"]],[T]]],[11,R[43],E,E,2,[[["self"]],[R[45]]]],[11,R[41],E,E,2,[[["self"]],[T]]],[11,R[42],E,E,2,[[["self"]],[R[3]]]],[11,"into",E,E,27,[[["self"]],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[40],E,E,27,[[[U]],[R[3]]]],[11,R[44],E,E,27,[[["self"]],[T]]],[11,R[43],E,E,27,[[["self"]],[R[45]]]],[11,R[41],E,E,27,[[["self"]],[T]]],[11,R[42],E,E,27,[[["self"]],[R[3]]]],[11,"into",E,E,15,[[["self"]],[U]]],[11,"to_string",E,E,15,[[["self"]],["string"]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[40],E,E,15,[[[U]],[R[3]]]],[11,R[44],E,E,15,[[["self"]],[T]]],[11,R[43],E,E,15,[[["self"]],[R[45]]]],[11,R[41],E,E,15,[[["self"]],[T]]],[11,R[42],E,E,15,[[["self"]],[R[3]]]],[11,"into",E,E,16,[[["self"]],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[40],E,E,16,[[[U]],[R[3]]]],[11,R[44],E,E,16,[[["self"]],[T]]],[11,R[43],E,E,16,[[["self"]],[R[45]]]],[11,R[41],E,E,16,[[["self"]],[T]]],[11,R[42],E,E,16,[[["self"]],[R[3]]]],[11,"into",E,E,28,[[["self"]],[U]]],[11,R[48],E,E,28,[[["self"]],["i"]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[40],E,E,28,[[[U]],[R[3]]]],[11,R[44],E,E,28,[[["self"]],[T]]],[11,R[43],E,E,28,[[["self"]],[R[45]]]],[11,R[41],E,E,28,[[["self"]],[T]]],[11,R[42],E,E,28,[[["self"]],[R[3]]]],[11,"into",E,E,17,[[["self"]],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[40],E,E,17,[[[U]],[R[3]]]],[11,R[44],E,E,17,[[["self"]],[T]]],[11,R[43],E,E,17,[[["self"]],[R[45]]]],[11,R[41],E,E,17,[[["self"]],[T]]],[11,R[42],E,E,17,[[["self"]],[R[3]]]],[11,"into",E,E,18,[[["self"]],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[40],E,E,18,[[[U]],[R[3]]]],[11,R[44],E,E,18,[[["self"]],[T]]],[11,R[43],E,E,18,[[["self"]],[R[45]]]],[11,R[41],E,E,18,[[["self"]],[T]]],[11,R[42],E,E,18,[[["self"]],[R[3]]]],[11,"into",E,E,19,[[["self"]],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[40],E,E,19,[[[U]],[R[3]]]],[11,R[44],E,E,19,[[["self"]],[T]]],[11,R[43],E,E,19,[[["self"]],[R[45]]]],[11,R[41],E,E,19,[[["self"]],[T]]],[11,R[42],E,E,19,[[["self"]],[R[3]]]],[11,"into",E,E,20,[[["self"]],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[40],E,E,20,[[[U]],[R[3]]]],[11,R[44],E,E,20,[[["self"]],[T]]],[11,R[43],E,E,20,[[["self"]],[R[45]]]],[11,R[41],E,E,20,[[["self"]],[T]]],[11,R[42],E,E,20,[[["self"]],[R[3]]]],[11,"into",E,E,23,[[["self"]],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[40],E,E,23,[[[U]],[R[3]]]],[11,R[44],E,E,23,[[["self"]],[T]]],[11,R[43],E,E,23,[[["self"]],[R[45]]]],[11,R[41],E,E,23,[[["self"]],[T]]],[11,R[42],E,E,23,[[["self"]],[R[3]]]],[11,"into",E,E,21,[[["self"]],[U]]],[11,R[46],E,E,21,[[["self"]],[T]]],[11,R[47],E,E,21,N],[11,"from",E,E,21,[[[T]],[T]]],[11,R[40],E,E,21,[[[U]],[R[3]]]],[11,R[44],E,E,21,[[["self"]],[T]]],[11,R[43],E,E,21,[[["self"]],[R[45]]]],[11,R[41],E,E,21,[[["self"]],[T]]],[11,R[42],E,E,21,[[["self"]],[R[3]]]],[11,"into",E,E,22,[[["self"]],[U]]],[11,R[46],E,E,22,[[["self"]],[T]]],[11,R[47],E,E,22,N],[11,"from",E,E,22,[[[T]],[T]]],[11,R[40],E,E,22,[[[U]],[R[3]]]],[11,R[44],E,E,22,[[["self"]],[T]]],[11,R[43],E,E,22,[[["self"]],[R[45]]]],[11,R[41],E,E,22,[[["self"]],[T]]],[11,R[42],E,E,22,[[["self"]],[R[3]]]],[11,"into",E,E,24,[[["self"]],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[40],E,E,24,[[[U]],[R[3]]]],[11,R[44],E,E,24,[[["self"]],[T]]],[11,R[43],E,E,24,[[["self"]],[R[45]]]],[11,R[41],E,E,24,[[["self"]],[T]]],[11,R[42],E,E,24,[[["self"]],[R[3]]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[46],E,E,3,[[["self"]],[T]]],[11,R[47],E,E,3,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[40],E,E,3,[[[U]],[R[3]]]],[11,R[44],E,E,3,[[["self"]],[T]]],[11,R[43],E,E,3,[[["self"]],[R[45]]]],[11,R[41],E,E,3,[[["self"]],[T]]],[11,R[42],E,E,3,[[["self"]],[R[3]]]],[11,"into",E,E,25,[[["self"]],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[40],E,E,25,[[[U]],[R[3]]]],[11,R[44],E,E,25,[[["self"]],[T]]],[11,R[43],E,E,25,[[["self"]],[R[45]]]],[11,R[41],E,E,25,[[["self"]],[T]]],[11,R[42],E,E,25,[[["self"]],[R[3]]]],[11,"into",E,E,4,[[["self"]],[U]]],[11,R[46],E,E,4,[[["self"]],[T]]],[11,R[47],E,E,4,N],[11,"from",E,E,4,[[[T]],[T]]],[11,R[40],E,E,4,[[[U]],[R[3]]]],[11,R[44],E,E,4,[[["self"]],[T]]],[11,R[43],E,E,4,[[["self"]],[R[45]]]],[11,R[41],E,E,4,[[["self"]],[T]]],[11,R[42],E,E,4,[[["self"]],[R[3]]]],[11,"into",E,E,5,[[["self"]],[U]]],[11,R[46],E,E,5,[[["self"]],[T]]],[11,R[47],E,E,5,N],[11,"from",E,E,5,[[[T]],[T]]],[11,R[40],E,E,5,[[[U]],[R[3]]]],[11,R[44],E,E,5,[[["self"]],[T]]],[11,R[43],E,E,5,[[["self"]],[R[45]]]],[11,R[41],E,E,5,[[["self"]],[T]]],[11,R[42],E,E,5,[[["self"]],[R[3]]]],[11,"into",E,E,6,[[["self"]],[U]]],[11,R[46],E,E,6,[[["self"]],[T]]],[11,R[47],E,E,6,N],[11,"from",E,E,6,[[[T]],[T]]],[11,R[40],E,E,6,[[[U]],[R[3]]]],[11,R[44],E,E,6,[[["self"]],[T]]],[11,R[43],E,E,6,[[["self"]],[R[45]]]],[11,R[41],E,E,6,[[["self"]],[T]]],[11,R[42],E,E,6,[[["self"]],[R[3]]]],[11,"into",E,E,7,[[["self"]],[U]]],[11,R[46],E,E,7,[[["self"]],[T]]],[11,R[47],E,E,7,N],[11,"from",E,E,7,[[[T]],[T]]],[11,R[40],E,E,7,[[[U]],[R[3]]]],[11,R[44],E,E,7,[[["self"]],[T]]],[11,R[43],E,E,7,[[["self"]],[R[45]]]],[11,R[41],E,E,7,[[["self"]],[T]]],[11,R[42],E,E,7,[[["self"]],[R[3]]]],[11,"into",E,E,8,[[["self"]],[U]]],[11,R[46],E,E,8,[[["self"]],[T]]],[11,R[47],E,E,8,N],[11,"from",E,E,8,[[[T]],[T]]],[11,R[40],E,E,8,[[[U]],[R[3]]]],[11,R[44],E,E,8,[[["self"]],[T]]],[11,R[43],E,E,8,[[["self"]],[R[45]]]],[11,R[41],E,E,8,[[["self"]],[T]]],[11,R[42],E,E,8,[[["self"]],[R[3]]]],[11,"into",E,E,9,[[["self"]],[U]]],[11,R[46],E,E,9,[[["self"]],[T]]],[11,R[47],E,E,9,N],[11,"from",E,E,9,[[[T]],[T]]],[11,R[40],E,E,9,[[[U]],[R[3]]]],[11,R[44],E,E,9,[[["self"]],[T]]],[11,R[43],E,E,9,[[["self"]],[R[45]]]],[11,R[41],E,E,9,[[["self"]],[T]]],[11,R[42],E,E,9,[[["self"]],[R[3]]]],[11,"into",E,E,10,[[["self"]],[U]]],[11,R[46],E,E,10,[[["self"]],[T]]],[11,R[47],E,E,10,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[40],E,E,10,[[[U]],[R[3]]]],[11,R[44],E,E,10,[[["self"]],[T]]],[11,R[43],E,E,10,[[["self"]],[R[45]]]],[11,R[41],E,E,10,[[["self"]],[T]]],[11,R[42],E,E,10,[[["self"]],[R[3]]]],[11,"into",E,E,11,[[["self"]],[U]]],[11,R[46],E,E,11,[[["self"]],[T]]],[11,R[47],E,E,11,N],[11,"from",E,E,11,[[[T]],[T]]],[11,R[40],E,E,11,[[[U]],[R[3]]]],[11,R[44],E,E,11,[[["self"]],[T]]],[11,R[43],E,E,11,[[["self"]],[R[45]]]],[11,R[41],E,E,11,[[["self"]],[T]]],[11,R[42],E,E,11,[[["self"]],[R[3]]]],[11,"extend",E,E,21,[[["self"],[T]]]],[11,"extend",E,E,22,[[["self"],[T]]]],[11,"drop",E,E,12,[[["self"]]]],[11,"drop",E,E,14,[[["self"]]]],[11,"drop",E,E,16,[[["self"]]]],[11,"drop",E,E,18,[[["self"]]]],[11,"drop",E,E,19,[[["self"]]]],[11,"drop",E,E,23,[[["self"]]]],[11,"drop",E,E,24,[[["self"]]]],[11,R[49],E,E,21,[[["self"],[R[14]]],[R[6],[R[50]]]]],[11,"lt",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,"le",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,"gt",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,"ge",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,R[49],E,E,22,[[["self"],[R[18]]],[R[6],[R[50]]]]],[11,"lt",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"le",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"gt",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"ge",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"next",E,E,26,[[["self"]],[R[6],[R[3]]]]],[11,"next",E,E,28,[[["self"]],[R[6],[R[3]]]]],[11,"eq",E,E,3,[[["self"],[R[35]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[35]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,"ne",E,E,21,[[["self"],[R[14]]],["bool"]]],[11,"eq",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"ne",E,E,22,[[["self"],[R[18]]],["bool"]]],[11,"from",E,E,15,[[["nulerror"]],[R[5]]]],[11,"clone",E,E,1,[[["self"]],[R[51]]]],[11,"clone",E,E,2,[[["self"]],[R[52]]]],[11,"clone",E,E,3,[[["self"]],[R[35]]]],[11,"clone",E,E,21,[[["self"]],[R[14]]]],[11,"clone",E,E,22,[[["self"]],[R[18]]]],[11,"clone",E,E,4,[[["self"]],[R[53]]]],[11,"clone",E,E,5,[[["self"]],[R[54]]]],[11,"clone",E,E,6,[[["self"]],["hostkeytype"]]],[11,"clone",E,E,7,[[["self"]],[R[11]]]],[11,"clone",E,E,8,[[["self"]],[R[55]]]],[11,"clone",E,E,9,[[["self"]],[R[9]]]],[11,"clone",E,E,10,[[["self"]],["checkresult"]]],[11,"clone",E,E,11,[[["self"]],["knownhostkeyformat"]]],[11,"cmp",E,E,21,[[["self"],[R[14]]],[R[50]]]],[11,"cmp",E,E,22,[[["self"],[R[18]]],[R[50]]]],[11,"fmt",E,E,15,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,15,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,3,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[56]]],[R[3]]]],[11,"hash",E,E,21,N],[11,"hash",E,E,22,N],[11,"sub",E,R[57],21,[[["self"],[R[14]]],[R[14]]]],[11,"sub",E,R[57],22,[[["self"],[R[18]]],[R[18]]]],[11,R[58],E,R[59],21,[[["self"],[R[14]]]]],[11,R[58],E,R[59],22,[[["self"],[R[18]]]]],[11,"not",E,R[60],21,[[["self"]],[R[14]]]],[11,"not",E,R[60],22,[[["self"]],[R[18]]]],[11,"bitand",E,R[61],21,[[["self"],[R[14]]],[R[14]]]],[11,"bitand",E,R[61],22,[[["self"],[R[18]]],[R[18]]]],[11,"bitor",E,R[62],21,[[["self"],[R[14]]],[R[14]]]],[11,"bitor",E,R[62],22,[[["self"],[R[18]]],[R[18]]]],[11,"bitxor",E,R[63],21,[[["self"],[R[14]]],[R[14]]]],[11,"bitxor",E,R[63],22,[[["self"],[R[18]]],[R[18]]]],[11,R[64],E,R[65],21,[[["self"],[R[14]]]]],[11,R[64],E,R[65],22,[[["self"],[R[18]]]]],[11,R[66],E,R[67],21,[[["self"],[R[14]]]]],[11,R[66],E,R[67],22,[[["self"],[R[18]]]]],[11,R[68],E,R[69],21,[[["self"],[R[14]]]]],[11,R[68],E,R[69],22,[[["self"],[R[18]]]]],[11,R[70],E,E,21,[[[T]],[R[14]]]],[11,R[70],E,E,22,[[[T]],[R[18]]]],[11,"fmt",E,E,21,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,21,[[["self"],[R[56]]],[R[3]]]],[11,"fmt",E,E,22,[[["self"],[R[56]]],[R[3]]]],[11,"read",E,E,14,N],[11,"read",E,E,27,N],[11,"read",E,E,24,N],[11,"write",E,E,14,N],[11,"flush",E,E,14,[[["self"]],[R[3]]]],[11,"write",E,E,27,N],[11,"flush",E,E,27,[[["self"]],[R[3]]]],[11,"write",E,E,24,N],[11,"flush",E,E,24,[[["self"]],[R[3]]]],[11,"seek",E,"Move the file handle's internal pointer to an arbitrary…",24,[[["self"],["seekfrom"]],[R[3],["u64"]]]],[11,"description",E,E,15,[[["self"]],["str"]]]],"p":[[3,R[71]],[3,R[72]],[3,R[73]],[3,R[74]],[4,R[75]],[4,R[76]],[4,R[77]],[4,R[78]],[4,R[79]],[4,R[80]],[4,R[81]],[4,R[82]],[3,"Agent"],[3,R[83]],[3,"Channel"],[3,"Error"],[3,R[84]],[3,"Host"],[3,R[85]],[3,"Session"],[3,R[86]],[3,R[87]],[3,R[88]],[3,"Sftp"],[3,"File"],[3,R[89]],[3,R[90]],[3,"Stream"],[3,"Hosts"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);